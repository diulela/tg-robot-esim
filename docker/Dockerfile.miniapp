# 多阶段构建 Dockerfile for Mini App

# 阶段 1: 构建前端
FROM node:18-alpine AS frontend-builder

WORKDIR /app/miniapp

# 复制前端文件
COPY miniapp/package*.json ./
RUN npm ci

COPY miniapp/ ./
RUN npm run build

# 阶段 2: 构建后端
FROM golang:1.24.2-alpine AS backend-builder

WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache git gcc musl-dev sqlite-dev

# 复制 go mod 文件
COPY backend/go.mod backend/go.sum ./
RUN go mod download

# 复制后端源代码
COPY backend/ .

# 构建应用
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o miniapp-server ./cmd/miniapp/main.go

# 阶段 3: 运行时镜像
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# 从构建阶段复制文件
COPY --from=backend-builder /app/miniapp-server .
COPY --from=frontend-builder /app/miniapp/dist ./static

# 创建必要目录
RUN mkdir -p ./data ./logs ./config

# 暴露端口
EXPOSE 8080

# 运行应用
CMD ["./miniapp-server"]
